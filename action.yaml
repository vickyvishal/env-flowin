name: 'OrgFlow - Flow an environment in'
author: 'OrgFlow'
description: 'Commit the metadata in your Salesforce org to a Git repository.'
branding:
  icon: 'check-square'
  color: 'red'
inputs:
  stack-name:
    description: "Name of the stack that contains the environment."
    required: true
    default: 'Main'
  environment-name:
    description: "Name of the environment."
    required: true
  commit-message:
    description: "Optionally override the default message applied to the commits."
    required: false
  force:
    description: "Force commit (bypass OrgFlow's merging strategy and commit the meatadata from Salesforce as it is, even if the Git repository is ahead of your Salesforce org)? Type `true` to enable."
    required: true
    default: 'false'
  license-key:
    description: "Your OrgFlow license key. You can get a license key from https://www.orgflow.io if you do not already have one."
    required: true
  encryption-key:
    description: "The encryption key that was used to save your Salesforce credentials."
    required: true
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-id }}
runs:
  using: "composite"
  steps:
    - id: mask-values
      name: Mask sensitive values
      run: echo "::add-mask::${{ inputs.license-key }}" && echo "::add-mask::${{ inputs.encryption-key }}"
    - using: OrgFlowActions/verify-orgflow-is-available@v1
    - id: env-flowin
      name: Run env:flowin
      run: echo "::set-output name=random-id::$(orgflow env:flowin)"
      env:
        ORGFLOW_LICENSEKEY: ${{ inputs.license-key }}
        ORGFLOW_ENCRYPTIONKEY: ${{ inputs.encryption-key }}
      shell: bash
